<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.itwillbs.project_movie.mapper.AdminManageMapper">
	
	<select id="adminLogin" resultType="adminmanage">
		SELECT *
		FROM admin
		WHERE 
			admin_id = #{admin_id} AND admin_passwd = #{admin_passwd}
	</select>
	
	<insert id="insertAccount">
	    INSERT INTO admin 
	    VALUES (
	        #{admin_id},
	        #{admin_passwd},
	        NOW(),
	        TRUE,
	        #{user_name},
	        #{member_manage},
	        #{payment_manage},
	        #{notice_board_manage},
	        #{movie_manage},
	        #{theater_manage},
	        #{vote_manage}
	    )
	</insert>
	
	<select id="selectAdminPagingListPaging" resultType="adminmanage">
		SELECT *
		FROM admin
		ORDER BY start_date
		LIMIT
			#{startRow},
			#{listLimit}
	</select>
	
		<select id="selectMemberListPaging" resultType="memberAllInfo">
		SELECT  -- 회원테이블 구성 시 가입일, 탈퇴일 혹은 고유 인덱스 컬럼이 필요하다는 것을 고려하지 못하여 중복되지 않는 값으로 정렬이 불가
			c.member_id AS member_id, 
			count(*) AS coupon_num, 
		    m.point AS remain_point,
		    m.member_name AS member_name,
		    m.member_passwd AS member_passwd,
		    m.birth_date AS birth_date,
		    m.email AS email,
		    m.gender AS gender,
		    m.genre AS gerne,
			m.phone AS phone,
		    m.text_receive AS text_receive,
		    m.email_receive AS email_receive,
		    m.info_open AS info_open,
		    m.member_type AS member_type,
		    m.email_auth_status AS email_auth_status,
		    m.phone_auth_status AS phone_auth_status,
		    m.member_status AS member_status
		FROM 
			member m 
		JOIN 
			coupon c
		ON 
			m.member_id = c.member_id                  
		GROUP BY 
			c.member_id;
	</select>
	
	<select id="checkAdminId" resultType="String">
		SELECT admin_id
		FROM admin
		WHERE admin_id = #{id}
	</select>
	
	<delete id="deleteAdminAccount">
		DELETE FROM admin
		WHERE admin_id = #{id}
	</delete>
	
	<select id="getBoardListCount">
		SELECT count(*)
		FROM admin
	</select> 
	
	<select id="selectAdminAccountInfo" resultType="adminmanage">
		SELECT *
		FROM admin
		WHERE admin_id = #{admin_id}
	</select>
	
	<update id="adminAccountModify">
		UPDATE admin
		SET 
			user_name = #{user_name},
			admin_passwd = #{admin_passwd},
			member_manage = #{member_manage},
			payment_manage = #{payment_manage},
			notice_board_manage = #{notice_board_manage},
			movie_manage = #{movie_manage},
			theater_manage = #{theater_manage},
			vote_manage = #{vote_manage}
		WHERE
			admin_id = #{admin_id}
	</update>
	
	<insert id="insertEventBoard">
		<selectKey keyProperty="event_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(event_code), 0)
			FROM event_board;
		</selectKey>
		
		INSERT INTO event_board
		VALUES(
			#{event_code}+1,
			#{event_subject},
			#{event_content},
			#{event_file1},
			#{event_file2},
			#{event_file3},
			#{event_writer},
			now(),
			#{view_count},
			#{event_status},
			#{event_start_date},
			#{event_end_date},
			DEFAULT
		)
	</insert>
	
	<select id="selectEventBoardList" resultType="eventboard">
		select *
		from event_board
		order by event_code desc
	</select>
	
	<update id="updateEventStatusStart">
		UPDATE event_board
		SET event_status = 1
		WHERE event_code = #{event_code}
	</update>
	
	<update id="updateEventStatusEnd">
		UPDATE event_board
		SET event_status = 2, 
			event_end_date = now()
		WHERE event_code = #{event_code}
	</update>
	
	<update id="updateEventWinnerSetStatus">
		UPDATE event_board
		SET set_winner_status = true
		WHERE event_code = #{event_code}
	</update>
	
	<select id="getEventBoardList" resultType="eventboard">
		SELECT *
		FROM event_board
		WHERE event_code = #{event_code}
	</select> 
	
	<select id="getEndEventList" resultType="eventboard">
		SELECT *
		FROM event_board
		WHERE event_status = 2
	</select>
	
	<select id="selectMemberInfoForEvent" resultType="member">
		SELECT *
		FROM member; 
	</select>
	
<!-- 	<select id="checkEventStatus" resultType="eventboard"> -->
<!-- 		SELECT event_status, set_winner_status -->
<!-- 		FROM event_board -->
<!-- 		WHERE event_code = #{event_code} -->
<!-- 	</select> -->
	
	<insert id="insertCoupon">
		<selectKey keyProperty="coupon_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(coupon_code), 0)
			FROM coupon;
		</selectKey>
		
		INSERT INTO coupon
		VALUES (
			#{coupon_code}+1,
			#{coupon_type},
			#{discount_amount},
			#{discount_rate},
			now(),
			#{expired_date},
			#{coupon_status},
			#{member_id},
			#{event_code}
		)
	</insert>
	
	<update id="creditPoint">
		UPDATE member
		SET point = point + #{point_amount}
		WHERE member_id = #{id}
	</update>
	
	<insert id="insertPointInfo">
		<selectKey keyProperty="point_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(point_code), 0)
			FROM point;
		</selectKey>
		
		INSERT INTO point
		VALUES (
			#{point_code}+1,
			#{point_amount},
			DEFAULT,
			#{event_code},
			#{id},
			DEFAULT,
			now(),
			DEFAULT
		)
	</insert>
	
	<select id="selectAllEventWinner" resultType="EventWinner">
		SELECT 
			c.event_code AS event_code, 
			c.member_id AS winner_id, 
			e.event_subject AS event_subject, 
			e.event_start_date AS event_start_date, 
			e.event_end_date AS event_end_date,
			c.coupon_type AS coupon_type,
			c.discount_amount AS discount_amount,
			c.discount_rate AS discount_rate,
			c.regis_date AS prize_datetime
		FROM 
			event_board e 
		JOIN 
			coupon c
		ON 
			e.event_code = c.event_code
	</select>
	
	<select id="getPointWinnerList" resultType="EventWinner">
		SELECT 
			p.event_code AS event_code,
		    p.point_holder AS winner_id,
			e.event_subject AS event_subject, 
			e.event_start_date AS event_start_date, 
			e.event_end_date AS event_end_date,
		    p.point_credited AS point_amount,
		    p.regis_date AS prize_datetime
		FROM 
			event_board e 
		JOIN 
			point p
		ON 
			e.event_code = p.event_code
	</select>
	
	<select id="getPointRecord" resultType="point">
		SELECT *
		FROM point
	</select>
	
	<select id="getCouponList" resultType="coupon">
		SELECT *
		FROM coupon
	</select>
	
	<select id="getCouponInfo" resultType="map">
		SELECT c.member_id, count(*) AS coupon
		FROM member m 
		JOIN coupon c
		ON m.member_id = c.member_id
		GROUP BY c.member_id;
	</select>
		
	<select id="getAdminListCount" resultType="int">
		SELECT count(*)
		FROM admin
	</select>
	
	<select id="getMemberListCount" resultType="int">
		SELECT count(*)
		FROM member
	</select>
	
 </mapper>