<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.project_movie.mapper.MovieMapper">

	<!-- DB에 영화등록 -->
	<insert id="insertMovie">
		INSERT
		INTO movie
		VALUES (
			#{movie_code}
			, #{movie_name}
			, TRIM(#{movie_genre})
			, TRIM(#{movie_director})
			, #{movie_actor}
			, #{release_date}
			, #{running_time}
			, #{age_limit}
			, #{movie_rating}
			, #{movie_synopsis}
			, #{movie_status}
			, #{movie_img1}
			, #{movie_img2}
			, #{movie_img3}
			, #{movie_img4}
			, #{movie_img5}
			, #{movie_trailer}
			, now()
			, #{regist_admin_id}
			, null
			, null
			, null
		)
	</insert>
	
	<!-- 등록된 영화정보 조회 -->
	<select id="SelectMovieByCode" resultType="movie">
		SELECT *
		FROM movie
		WHERE movie_code = #{movie_code}
	</select>
	
	<!-- 영화목록 수 조회 -->
	<select id="selectMovieListCount" resultType="int">
		SELECT COUNT(*)
		FROM movie
		<choose>
			<when test="!howSearch.equals('') and howSearch2.equals('')">
				WHERE ${howSearch} LIKE '%${searchKeyword}%'
			</when>
			<when test="howSearch.equals('') and !howSearch2.equals('')">
				WHERE ${howSearch2} = #{searchKeyword2}
			</when>
			<when test="!howSearch.equals('') and !howSearch2.equals('')">
				WHERE ${howSearch} LIKE '%${searchKeyword}%'
				AND ${howSearch2} = #{searchKeyword2}
			</when>
		</choose>
	</select>
	
	<!-- 페이징처리를 위한 영화목록 조회 -->
	<select id="selectMovieList" resultType="movie">
		SELECT *
		FROM movie
		<choose>
			<when test="!howSearch.equals('') and howSearch2.equals('')">
				WHERE ${howSearch} LIKE '%${searchKeyword}%'
			</when>
			<when test="howSearch.equals('') and !howSearch2.equals('')">
				WHERE ${howSearch2} = #{searchKeyword2}
			</when>
			<when test="!howSearch.equals('') and !howSearch2.equals('')">
				WHERE ${howSearch} LIKE '%${searchKeyword}%'
				AND ${howSearch2} = #{searchKeyword2}
			</when>
		</choose>
		ORDER BY movie_name ASC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 조건별 영화리스트 조회 -->
	<select id="selectMovieListCheck" resultType="movie">
		SELECT *
		FROM movie
		<choose>
			<when test="howSearch != null and searchKeyword != null"> 
				WHERE ${howSearch} LIKE '%${searchKeyword}%' 
			</when>
			<when test="columnName != null and selectCondition != null">
				WHERE ${columnName} = #{selectCondition}
			</when>
			<when test="columnName != null and in1 != null and in2 != null">
				WHERE ${columnName} IN ( #{in1}, #{in2} )
			</when>
		</choose>
		<if test="columnName2 != null and selectCondition2 != null">
			AND ${columnName2} = #{selectCondition2}
		</if>
		<if test="orderColumn != null and howOrder != null">
			ORDER BY ${orderColumn} ${howOrder}
		</if>
		<if test="orderColumn2 != null and howOrder2 != null">
			, ${orderColumn2} ${howOrder2}
		</if>
	</select>
	
	<!-- 조회조건 컬럼별 해당 영화 수 검색 -->
	<select id="selectMovieCount" resultType="int">
		SELECT COUNT(*)
		FROM movie
		WHERE ${columnName} = #{selectCondition}
		<if test="columnName2 != null and selectCondition2 != null">
			AND ${columnName2} = #{selectCondition2}
		</if>
	</select>
	
	<!-- 영화상태 업데이트 -->
	<update id="updateMovieStatus">
		UPDATE movie
		SET movie_status = #{movie_status}
		<choose>
			<when test="movie_type == null">
				, movie_type = null	
			</when>
			<otherwise>
				, movie_type = #{movie_type}			
			</otherwise>		
		</choose>
		WHERE movie_code = #{movie_code}
	</update>
	
	<!-- 영화 상영시작일, 상영종료일 업데이트 -->
	<update id="updateScreeningPeriod">
		UPDATE movie
		SET start_screening_date = #{start_screening_date}
			, end_screening_date = #{end_screening_date}
		WHERE movie_code = #{movie_code}
	</update>
	
	<!-- 영화정보 삭제 -->
	<delete id="deleteMovie">
		DELETE FROM movie
		WHERE movie_code = #{movie_code}
	</delete>
	
</mapper>