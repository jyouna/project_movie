<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.itwillbs.project_movie.mapper.MyPageMapper">
<!-- 1. 예매내역 글 전체 가져오기 -->
	<select id="selectReservationListCount" resultType="int">
		SELECT COUNT(*)
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>
<!-- 	예매내역 글 시작번호 끝번호 -->
	<select id="selectReservationList" resultType="map">
		SELECT payment.payment_code, payment.ticket_count, payment.total_amount, payment.total_seat_code, movie.movie_name, schedule.theater_code, schedule.start_time
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code
 		LIMIT 
 			#{startRow}
 			,#{listLimit}
	</select>
<!-- 	예매내역 상세보기 -->
	<select id="selectReservationInfo" resultType="map">
		SELECT payment.payment_code, payment.ticket_count, payment.payment_date, payment.total_amount, payment.total_seat_code, movie.movie_name, schedule.theater_code, schedule.start_time
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>
	
<!-- 	예매취소 글 개수 -->
	<select id="selectReservationCancelCount" resultType="int">  
		SELECT refund.refund_status, refund.refund_completed_date, refund.refund_amount, payment.ticket_count, schedule.start_time, movie.movie_name
		FROM refund JOIN payment
		ON refund.payment_code = payment.payment_code
		JOIN schedule
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>
<!-- 	예매취소 글 시작번호 끝번호 -->
	<select id="selectReservationCancel" resultType="map">
		SELECT refund.refund_status, refund.refund_completed_date, refund.refund_amount, payment.ticket_count, schedule.start_time, movie.movie_name
		FROM refund JOIN payment
		ON refund.payment_code = payment.payment_code
		JOIN schedule
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code
		LIMIT 
			#{startRow}
			, #{listLimit}
	</select>
	
<!-- 	2.내가 본 영화 글 전체 가져오기 -->
	<select id="selectWathedMovieCount" resultType="int">
		SELECT COUNT(*)
		FROM movie
		JOIN schedule ON movie.movie_code = schedule.movie_code
		JOIN payment ON schedule.schedule_code = payment.schedule_code
		WHERE
			member_id = 'benddlx'
	</select>
<!-- 	내가 본 영화 시작번호 끝번호 -->
	<select id="selectWatchedMovie" resultType="map">
		SELECT movie.movie_code, movie.movie_name, schedule.start_time, payment.ticket_count
		FROM movie
		JOIN schedule ON movie.movie_code = schedule.movie_code
		JOIN payment ON schedule.schedule_code = payment.schedule_code
		WHERE
			member_id = 'benddlx'
		LIMIT 
			#{startRow}
			, #{listLimit}
	</select>
	<insert id="insertReview">
		<selectKey keyProperty="review_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(review_code),0)
			FROM review;
		</selectKey>
		INSERT INTO review(
			review_content,
			review_recommend
		)VALUES(
			#{review_content},
			#{review_recommmend}
		)
	</insert>
<!-- 	이건뭐지 -->
<!-- 	<select id="selectWatchedmovieReview" resultType="map"> -->
<!-- 		SELECT movie.movie_code, movie.movie_name, schedule.start_time, payment.ticket_count -->
<!-- 		FROM movie -->
<!-- 		JOIN schedule ON movie.movie_code = schedule.movie_code -->
<!-- 		JOIN payment ON schedule.schedule_code = payment.schedule_code -->
<!-- 		WHERE -->
<!-- 			member_id = 'benddlx' -->
<!-- 	</select> -->
<!-- 	리뷰 등록 -->
<!-- 	리뷰 총 개수 출력 -->
	<select id="selectReviewListCount" resultType="int">
		SELECT COUNT(*)
		FROM review
	</select>
<!-- 	리뷰 글 시작번호 끝번호 -->
	<select id="selectReviewList" resultType="map">
		SELECT review.*, movie.movie_name
		FROM review
		JOIN movie ON review.movie_code = movie.movie_code
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<select id="selectIsRegistReview" resultType="map">
		SELECT *
		FROM review
		WHERE movie_code = #{movie_code}
		AND review_writer = #{id}
	</select>
	<select id="selectCouponListCount" resultType="int">
		SELECT COUNT(*)
		FROM coupon
	</select>
	<select id="selectCouponList" resultType="map">
		SELECT *
		FROM coupon
		LIMIT #{startRow}, #{listLimit}
	</select>
	<select id="selectPointListCount" resultType="int">
		SELECT COUNT(*)
		FROM point
	</select>
	<select id="selectPointList" resultType="map">
		SELECT *
		FROM point JOIN event_board
		ON point.event_code = event_board.event_code
		LIMIT #{startRow}, #{listLimit}
	</select>
	
<!-- 1:1문의 글 전체 가져오기 -->
 	<select id="selectInquiryListCount" resultType="int">
 		SELECT COUNT(*)
 		FROM Inquiry
 		<if test="!searchKeyword.equals('')">
 			WHERE 
 			<choose>
 				<when test="searchType.equals('subject')">
		 			inquiry_subject LIKE CONCAT('%', #{searchKeyword},'%')
 				</when>
 				<when test="searchType.equals('content')">
		 			inquiry_content LIKE CONCAT('%', #{searchKeyword},'%')
 				</when>
 			</choose>
 		</if>
	</select>
<!-- 	1:1문의 글 시작번호,끝번호 -->
 	<select id="selectInquiryList" resultType="inquiry">
 		SELECT *
 		FROM Inquiry
 		<if test="!searchKeyword.equals('')">
 			WHERE 
 			<choose>
 				<when test="searchType.equals('subject')">
		 			inquiry_subject LIKE CONCAT('%', #{searchKeyword},'%')
 				</when>
 				<when test="searchType.equals('content')">
		 			inquiry_content LIKE CONCAT('%', #{searchKeyword},'%')
 				</when>
 			</choose>
 		</if>
 		LIMIT 
 			#{startRow}
 			,#{listLimit}
 	</select>
<!-- 	1:1문의 글 선택 -->
 	<select id="selectInquiry" resultType="inquiry">
 		SELECT *
 		FROM Inquiry
 		WHERE inquiry_code = #{inquiry_code}
 	</select>
<!-- 	1:1문의 글 작성-->
	<insert id="insertInquiry">
	    INSERT INTO Inquiry(
	        inquiry_subject, 
	        inquiry_writer,
	        inquiry_content,
	        inquriy_date,
	        inquiry_writer_ip,
	        inquiry_re_ref,
	        inquiry_re_lev,
	        inquiry_re_seq
	    )
	    VALUES(
	        #{inquiry_subject},
	        #{inquiry_writer},
	        #{inquiry_content},
	        NOW(),
	        #{inquiry_writer_ip},
	        0,
	        0,
	     	0
	    )
	</insert>

<!--  	1:1문의 글 수정  -->
 	<update id="updateInquiry">
 		UPDATE Inquiry
 		SET inquiry_subject = #{inquiry_subject}
 		, inquiry_content = #{inquiry_content}
		WHERE inquiry_code = #{inquiry_code}
 	</update>
<!--  	1:1문의 글 삭제 -->
	<delete id="deleteInquiry">
		DELETE FROM Inquiry
		WHERE inquiry_code = #{inquiry_code}
	</delete>
<!-- 	==========================여기서부터 관리자 페이지 ================================================ -->
<!-- 공지사항 글 개수 -->
	<select id="selectNoticeListCount" resultType="int">
		SELECT COUNT(*)
		FROM notice_board
	</select>
<!-- 	공지사항 시작번호 끝번호 -->
	<select id="selectNoticeList" resultType="notice_board">
		SELECT *
		FROM notice_board
		LIMIT 
			#{startRow}
			,#{listLimit}
	</select>
<!-- 	공지사항 글 자세히보기 -->
	<select id="selectNotice" resultType="notice_board">
		SELECT *
		FROM notice_board
		WHERE notice_code = #{notice_board}
	</select>
<!-- 	공지사항 등록 -->
	<insert id="updateNoticeAdmin">
		INSERT INTO notice_board(
		notice_subject
		, notice_content
		, regis_date
		) VALUES(
			#{notice_subject}
			,#{notice_content}
			,NOW()
		)
	</insert>
<!-- 	공지사항 수정 -->
	<update id="updateNotice">
		UPDATE notice_board
		SET notice_subject = #{notice_subject}
		,notice_content = #{notice_content}
		WHERE notice_code = #{notice_code}
	</update>
<!-- 	공지사항 삭제 -->
	<delete id="deleteNotice">
		DELETE FROM notice_board
		WHERE notice_code = #{notice_code}
	</delete>
<!-- 	faq 글 개수 -->
	<select id="selectFaqListCount" resultType="int">
		SELECT COUNT(*)
		FROM faq_board 
	</select>
<!-- 	faq 글 시작번호 끝번호 -->
	<select id="selectFaqList" resultType="faq_board">
		SELECT *
		FROM faq_board
		LIMIT 
			#{startRow}
			,#{listLimit}
	</select>
<!-- 	FAQ 글 작성 -->
	<insert id="insertFaqAdmin">
		INSERT INTO faq_board(
		faq_subject
		,faq_content
		)VALUES(
			#{faq_subject}
			,#{faq_content}
		)
	</insert>
<!-- 	faq 글 자세히보기 -->
	<select id="selectFaq" resultType="faq_board">
		SELECT *
		FROM faq_board
		WHERE faq_code = #{faq_code}
	</select>
<!-- 	faq 글 수정 -->
	<update id="updateFaq">
		UPDATE faq_board
		SET faq_subject = #{faq_subject}
			, faq_content = #{faq_content}
		WHERE faq_code = #{faq_code}
	</update>
<!-- 	faq 글 삭제 -->
	<delete id="deleteFaq">
		DELETE 
		FROM faq_board
		WHERE faq_code = #{faq_code}
	</delete>
<!-- 	1:1문의 수정 -->
	<update id="updateInquiryModify">
 		UPDATE Inquiry
 		SET inquiry_subject = #{inquiry_subject}
 		, inquiry_content = #{inquiry_content}
		WHERE inquiry_code = #{inquiry_code}
	</update>
<!-- 	1:1문의 삭제 -->
	<delete id="deleteInquiryAdmin">
		DELETE FROM Inquiry
		WHERE inquiry_code = #{inquiry_code}
	</delete>
	
<!-- 	1:1문의 답변 순서조정  -->
<!-- 참조글 번호가 원본 게시물의 참조글번호와 같고, -->
<!-- 순서번호가 대상 게시물의 순서번호보다 더 큰 레코드들의 순서번호를 1씩 증가 -->
	<update id="updateInquiryReSeq">
		UPDATE Inquiry
		SET inquiry_re_seq  = inquiry_re_seq + 1
		WHERE inquiry_re_ref = #{inquiry_re_ref}
			AND inquiry_re_seq > #{inquiry_re_seq}
	</update>
<!-- 	1:1문의 답변 등록  -->
	<insert id="insertInquiryReply">
		<selectKey keyProperty="inquiry_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(inquiry_code),0)
			FROM Inquiry;
		</selectKey>
		INSERT INTO Inquiry(
			inquiry_code
			,inquiry_subject
			,inquiry_content
			,inquriy_date
			,response_status
			,inquiry_writer_ip
			,inquiry_re_ref
			,inquiry_re_lev
			,inquiry_re_seq
		)
		VALUES(
			#{inquiry_code} + 1
			,#{inquiry_subject}
			,#{inquiry_content}
			,NOW()
<!-- 			답글 = 2로 고정  -->
			,2
			,#{inquiry_writer_ip}
			,#{inquiry_re_ref}
			,#{inquiry_re_lev} + 1
			,#{inquiry_re_seq} + 1
		)
	</insert>
 </mapper>