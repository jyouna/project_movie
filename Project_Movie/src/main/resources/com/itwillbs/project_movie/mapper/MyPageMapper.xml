<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.itwillbs.project_movie.mapper.MyPageMapper">
<!-- 1. 예매내역 글 전체 가져오기 -->
	<select id="selectReservationListCount" resultType="int">
		SELECT COUNT(*)
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>

<!-- 	예매내역 글 시작번호 끝번호 -->
	<select id="selectReservationList" resultType="map">
		SELECT payment.payment_code, payment.ticket_count, payment.payment_end_time, payment.total_amount, payment.total_seat_code, movie.movie_name, schedule.theater_code, schedule.start_time
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code
 		LIMIT 
 			#{startRow}
 			,#{listLimit}
	</select>
<!-- 	예매내역 상세보기 -->
	<select id="selectReservationInfo" resultType="map">
		SELECT payment.payment_code, payment.ticket_count, payment.payment_end_time, payment.total_amount, payment.total_seat_code, movie.movie_name, schedule.theater_code, schedule.start_time
		FROM payment JOIN schedule 
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>
<!-- 	예매취소 글 개수 -->
	<select id="selectReservationCancelCount" resultType="int">  
		SELECT refund.refund_status, refund.refund_completed_date, refund.refund_amount, payment.ticket_count, schedule.start_time, movie.movie_name
		FROM refund JOIN payment
		ON refund.payment_code = payment.payment_code
		JOIN schedule
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code;
	</select>
<!-- 	예매취소 글 시작번호 끝번호 -->
	<select id="selectReservationCancel" resultType="map">
		SELECT refund.refund_status, refund.refund_completed_date, refund.refund_amount, payment.ticket_count, schedule.start_time, movie.movie_name
		FROM refund JOIN payment
		ON refund.payment_code = payment.payment_code
		JOIN schedule
		ON payment.schedule_code = schedule.schedule_code
		JOIN movie 
		ON schedule.movie_code = movie.movie_code
		LIMIT 
			#{startRow}
			, #{listLimit}
	</select>
<!-- 	2.내가 본 영화 글 전체 가져오기 -->
	<select id="selectWathedMovieCount" resultType="int">
		SELECT COUNT(*)
		FROM movie
		JOIN schedule ON movie.movie_code = schedule.movie_code
		JOIN payment ON schedule.schedule_code = payment.schedule_code
		WHERE
			member_id = 'benddlx'
	</select>
<!-- 	내가 본 영화 시작번호 끝번호 -->
	<select id="selectWatchedMovie" resultType="map">
		SELECT movie.movie_code, movie.movie_name, schedule.start_time, payment.ticket_count
		FROM movie
		JOIN schedule ON movie.movie_code = schedule.movie_code
		JOIN payment ON schedule.schedule_code = payment.schedule_code
		WHERE
			member_id = 'benddlx'
		LIMIT 
			#{startRow}
			, #{listLimit}
	</select>
	<select id="selectWatchedmovieReview" resultType="map">
		SELECT movie.movie_code, movie.movie_name, schedule.start_time, payment.ticket_count
		FROM movie
		JOIN schedule ON movie.movie_code = schedule.movie_code
		JOIN payment ON schedule.schedule_code = payment.schedule_code
		WHERE
			member_id = 'benddlx'
	</select>
<!-- 	리뷰 등록 -->
	<insert id="insertReviewList">
		INSERT INTO review
		VALUES(
			#{review_code} + 1
			, ${movie_code}
			, ${review_content}
			, ${review_writer}
		)
	</insert>
	
<!-- 	리뷰 총 개수 출력 -->
	<select id="selectReviewListCount" resultType="int">
		SELECT COUNT(*)
		FROM review
	</select>
<!-- 	리뷰 글 시작번호 끝번호 -->
	<select id="selectReviewList" resultType="map">
		SELECT review.*, movie.movie_name
		FROM review
		JOIN movie ON review.movie_code = movie.movie_code
		LIMIT #{startRow}, #{listLimit}
	</select>
	
	<select id="selectIsRegistReview" resultType="map">
		SELECT *
		FROM review
		WHERE movie_code = #{movie_code}
		AND review_writer = #{id}
	</select>
	
	<select id="selectCouponListCount" resultType="int">
		SELECT COUNT(*)
		FROM coupon
	</select>
	<select id="selectCouponList" resultType="map">
		SELECT *
		FROM coupon
		LIMIT #{startRow}, #{listLimit}
	</select>
	<select id="selectPointListCount" resultType="int">
		SELECT COUNT(*)
		FROM point
	</select>
	<select id="selectPointList" resultType="map">
		SELECT *
		FROM point
		LIMIT #{startRow}, #{listLimit}
	</select>
<!-- 1:1문의 글 전체 가져오기 -->
 	<select id="selectInquiryListCount" resultType="int">
 		SELECT COUNT(*)
 		FROM Inquiry
	</select>
<!-- 	1:1문의 글 시작번호,끝번호 -->
 	<select id="selectInquiryList" resultType="inquiry">
 		SELECT *
 		FROM Inquiry
 		LIMIT 
 			#{startRow}
 			,#{listLimit}
 	</select>
<!-- 	1:1문의 글 선택 -->
 	<select id="selectInquiry" resultType="inquiry">
 		SELECT *
 		FROM Inquiry
 		WHERE inquiry_code = #{inquiry_code}
 	</select>
<!-- 	1:1문의 글 작성-->
 	<insert id="insertInquiry">
 		INSERT INTO Inquiry
 		VALUES(
 			#{inquiry_code} + 1
 			, #{inquiry_subject}
 			, #{inquiry_writer}
 			, #{inquiry_content}
 			, #{inquiry_response}
 			, #{response_status}
 			, NOW()
 			, #{inquiry_writer_ip}
 		)
 	</insert>
<!--  	1:1문의 글 수정  -->
 	<update id="updateInquiry">
 		UPDATE Inquiry
 		SET inquiry_subject = #{inquiry_subject}
 		, inquiry_content = #{inquiry_content}
		, inquiry_date = #{inquiry_date}
		WHERE inquiry_code = #{inquiry_code}
 	</update>
<!--  	1:1문의 글 삭제 -->
	<delete id="deleteInquiry">
		DELETE 
		FROM Inquiry
		WHERE inquiry_code = #{inquiry_code}
	</delete>
 </mapper>