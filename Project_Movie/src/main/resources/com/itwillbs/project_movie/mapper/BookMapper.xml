<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.project_movie.mapper.BookMapper">

	
	<select id="selectMovieList" resultType="movie">
		SELECT *
		FROM movie
		WHERE movie_code IN (SELECT DISTINCT 
								movie_code
							 FROM schedule
							 WHERE start_time > now())
		
		ORDER BY movie_type
	</select>
	
	
	<select id="selectSchWithMovie" resultType="map">
		SELECT *
		FROM schedule s 
		JOIN movie m
		ON s.movie_code = m.movie_code
		WHERE DATE_FORMAT(start_time, '%Y년 %m월 %d') = #{start_time} 
		AND start_time > now()
		<if test="movie_name != ''">
			AND movie_name = #{movie_name}
		</if>
		ORDER BY movie_type, start_time
	</select>

	<select id="selectMovieList2" resultType="movie">
		SELECT *
		FROM movie
		<choose>
			<when test="movie_code.equals('')">
				WHERE movie_code IN (SELECT movie_code
									 FROM schedule
									 WHERE DATE_FORMAT(start_time, '%Y년 %m월 %d') = #{start_time}
									 AND start_time > NOW())
									 GROUP BY movie_code
			</when>
			<otherwise>
				WHERE movie_code = #{movie_code}
			</otherwise>
		</choose>
	</select>
	
	<select id="selectScheduleList" resultType="schedule">
		SELECT *
		FROM schedule
		WHERE DATE_FORMAT(start_time, '%Y년 %m월 %d') = #{start_time}
		AND start_time > now()
		<if test="!movie_code.equals('')">
			AND movie_code = #{movie_code}
		</if> 
		ORDER BY start_time
	</select>
	
	<select id="selectSeat" resultType="seat">
		SELECT SUBSTR(seat_code, 4) AS seat_code
		FROM seat
		WHERE theater_code = 'T1'
		ORDER BY seat_row ASC, seat_col ASC;
	</select>
	
	<select id="selectTicketType" resultType="map">
		SELECT *
		FROM ticket
	</select>
	
	<select id="selectTicketTypeAmount" resultType="int">
		SELECT *
		FROM ticket
		WHERE ticket_type = #{ticket_type}
	</select>
	
	<select id="selectScheduleInfoByScheduleCode" resultType="map">
		SELECT *
		FROM schedule s
		JOIN movie m
		ON s.movie_code = m.movie_code
		WHERE s.schedule_code = #{schedule_code}
	</select>
	
	<insert id="insertBookingTable">
		INSERT
		INTO booking
		VALUES 
		<foreach collection="insertBookingList" item="insertBookingInfo" separator=",">
			(
				#{insertBookingInfo.booking_code},
				#{insertBookingInfo.payment_code},
				#{insertBookingInfo.seat_code},
				#{insertBookingInfo.schedule_code}
			)
		</foreach>
	</insert>
	
	<insert id="insertPaymentTable">
		INSERT
		INTO payment
		VALUES (
			#{payment_code}
			, null
			, #{member_id}
			, #{schedule_code}
			, #{adult} + #{youth} + #{senior}
			, #{totalAmount}
			, 0			-- point_discount
			, 0			-- coupon_discount
			, 0			-- total_discount
			, null		-- total_payment
			, NOW()		-- seat_selection_time
			, null		-- payment_method
			, 0			-- payment_status
			, TRIM(#{totalSeat})
		)
	</insert>
	
	<select id="selectMyPoint" resultType="int">
		SELECT point
		FROM member
		WHERE member_id = #{id}
	</select>
	
	<select id="selectMyCouponList" resultType="map">
		SELECT *
		FROM coupon c 
		JOIN event_board e
		ON c.event_code = e.event_code
		WHERE c.member_id = #{id}
	</select>
	
	<select id="selectMyCoupon" resultType="coupon">
		SELECT *
		FROM coupon
		WHERE coupon_code = #{coupon_code}
		AND coupon_status = 0
	</select>
	
	<select id="selectMemberWhoPayTicket" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
	</select>
	
	<select id="selectPaymentInfo" resultType="payment">
		SELECT *
		FROM payment
		WHERE payment_code = #{payment_code}
	</select>
	
	<update id="updateBookingTicket">
<!-- 		<selectKey keyProperty="seat_code" resultType="map" order="AFTER"> -->
<!-- 			SELECT DISTINCT SUBSTR(seat_code, 4) -->
<!-- 			FROM booking b -->
<!-- 			JOIN payment p -->
<!-- 			ON b.payment_code = p.payment_code -->
<!-- 			WHERE b.schedule_code = #{schedule_code} -->
<!-- 			AND (payment_status = 1 -->
<!-- 			OR DATE_ADD(seat_selection_time, INTERVAL 10 MINUTE) > now()); -->
<!-- 		</selectKey> -->
<!-- 		<selectKey keyProperty="total_seat_code" resultType="String" order="AFTER"> -->
<!-- 			SELECT total_seat_code -->
<!-- 			FROM payment -->
<!-- 			WHERE schedule_code = #{schedule_code} -->
<!-- 			AND payment_code = #{payment_code} -->
<!-- 		</selectKey> -->
	
		UPDATE payment p
		JOIN member m
		ON p.member_id = m.member_id
		SET 
			p.payment_date = NOW()
			<if test="point_discount != null">
				, p.point_discount = #{total_discount}
				, p.total_discount = #{total_discount}
				, m.point = m.point - #{total_discount}
			</if>
			<if test="coupon_discount != null">
				, p.coupon_discount = #{total_discount}
				, p.total_discount = #{total_discount}
			</if>
			, p.total_payment = #{total_payment} 
			, p.payment_method = #{payment_method}
			, p.payment_status = 1
		WHERE p.payment_code = #{payment_code}
	</update>
	
	<insert id="insertPointDebited">
		INSERT
		INTO point
		VALUES (
			null
			, 0
			, #{map.point_discount}
			, null
			, #{id}
			, NOW()
			, null
			, #{map.payment_code}
		)
	</insert>
	
	<update id="updateCouponStatus">
		UPDATE coupon
		SET coupon_status = 1
		WHERE coupon_code = #{coupon_discount}
	</update>
	
	<select id="selectDisabledSeat" resultType="map">
		SELECT DISTINCT SUBSTR(seat_code, 4) as "seat_code"
		FROM booking b
		JOIN payment p
		ON b.payment_code = p.payment_code
		WHERE b.schedule_code = #{schedule_code}
		AND (payment_status = 1
		OR DATE_ADD(seat_selection_time, INTERVAL 10 MINUTE) > now())
	</select>

	
	
	
</mapper>















